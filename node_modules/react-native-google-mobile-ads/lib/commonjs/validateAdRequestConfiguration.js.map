{"version":3,"sources":["validateAdRequestConfiguration.ts"],"names":["validateAdRequestConfiguration","requestConfiguration","out","Error","maxAdContentRating","MaxAdContentRating","G","PG","T","MA","tagForChildDirectedTreatment","tagForUnderAgeOfConsent","testDeviceIdentifiers"],"mappings":";;;;;;;AAiBA;;AACA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMO,SAASA,8BAAT,CAAwCC,oBAAxC,EAAoF;AACzF,QAAMC,GAAyB,GAAG,EAAlC;;AAEA,MAAI,CAAC,sBAASD,oBAAT,CAAL,EAAqC;AACnC,UAAM,IAAIE,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,MAAIF,oBAAoB,CAACG,kBAAzB,EAA6C;AAC3C,QACEH,oBAAoB,CAACG,kBAArB,KAA4CC,uCAAmBC,CAA/D,IACAL,oBAAoB,CAACG,kBAArB,KAA4CC,uCAAmBE,EAD/D,IAEAN,oBAAoB,CAACG,kBAArB,KAA4CC,uCAAmBG,CAF/D,IAGAP,oBAAoB,CAACG,kBAArB,KAA4CC,uCAAmBI,EAJjE,EAKE;AACA,YAAM,IAAIN,KAAJ,CACJ,qJADI,CAAN;AAGD;;AAEDD,IAAAA,GAAG,CAACE,kBAAJ,GAAyBH,oBAAoB,CAACG,kBAA9C;AACD;;AAED,MAAI,4BAAeH,oBAAf,EAAqC,8BAArC,CAAJ,EAA0E;AACxE,QAAI,CAAC,uBAAUA,oBAAoB,CAACS,4BAA/B,CAAL,EAAmE;AACjE,YAAM,IAAIP,KAAJ,CACJ,8EADI,CAAN;AAGD;;AAEDD,IAAAA,GAAG,CAACQ,4BAAJ,GAAmCT,oBAAoB,CAACS,4BAAxD;AACD;;AAED,MAAI,4BAAeT,oBAAf,EAAqC,yBAArC,CAAJ,EAAqE;AACnE,QAAI,CAAC,uBAAUA,oBAAoB,CAACU,uBAA/B,CAAL,EAA8D;AAC5D,YAAM,IAAIR,KAAJ,CAAU,yEAAV,CAAN;AACD;;AAEDD,IAAAA,GAAG,CAACS,uBAAJ,GAA8BV,oBAAoB,CAACU,uBAAnD;AACD;;AAED,MAAI,4BAAeV,oBAAf,EAAqC,uBAArC,CAAJ,EAAmE;AACjE,QAAI,CAAC,qBAAQA,oBAAoB,CAACW,qBAA7B,CAAL,EAA0D;AACxD,YAAM,IAAIT,KAAJ,CAAU,sEAAV,CAAN;AACD;;AAEDD,IAAAA,GAAG,CAACU,qBAAJ,GAA4BX,oBAAoB,CAACW,qBAAjD;AACD;;AAED,SAAOV,GAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { hasOwnProperty, isArray, isBoolean, isObject } from './common';\nimport { MaxAdContentRating } from './MaxAdContentRating';\nimport { RequestConfiguration } from './types/RequestConfiguration';\n\nexport function validateAdRequestConfiguration(requestConfiguration: RequestConfiguration) {\n  const out: RequestConfiguration = {};\n\n  if (!isObject(requestConfiguration)) {\n    throw new Error(\"'requestConfiguration' expected an object value\");\n  }\n\n  if (requestConfiguration.maxAdContentRating) {\n    if (\n      requestConfiguration.maxAdContentRating !== MaxAdContentRating.G &&\n      requestConfiguration.maxAdContentRating !== MaxAdContentRating.PG &&\n      requestConfiguration.maxAdContentRating !== MaxAdContentRating.T &&\n      requestConfiguration.maxAdContentRating !== MaxAdContentRating.MA\n    ) {\n      throw new Error(\n        \"'requestConfiguration.maxAdContentRating' expected on of MaxAdContentRating.G, MaxAdContentRating.PG, MaxAdContentRating.T or MaxAdContentRating.MA\",\n      );\n    }\n\n    out.maxAdContentRating = requestConfiguration.maxAdContentRating;\n  }\n\n  if (hasOwnProperty(requestConfiguration, 'tagForChildDirectedTreatment')) {\n    if (!isBoolean(requestConfiguration.tagForChildDirectedTreatment)) {\n      throw new Error(\n        \"'requestConfiguration.tagForChildDirectedTreatment' expected a boolean value\",\n      );\n    }\n\n    out.tagForChildDirectedTreatment = requestConfiguration.tagForChildDirectedTreatment;\n  }\n\n  if (hasOwnProperty(requestConfiguration, 'tagForUnderAgeOfConsent')) {\n    if (!isBoolean(requestConfiguration.tagForUnderAgeOfConsent)) {\n      throw new Error(\"'requestConfiguration.tagForUnderAgeOfConsent' expected a boolean value\");\n    }\n\n    out.tagForUnderAgeOfConsent = requestConfiguration.tagForUnderAgeOfConsent;\n  }\n\n  if (hasOwnProperty(requestConfiguration, 'testDeviceIdentifiers')) {\n    if (!isArray(requestConfiguration.testDeviceIdentifiers)) {\n      throw new Error(\"'requestConfiguration.testDeviceIdentifiers' expected an array value\");\n    }\n\n    out.testDeviceIdentifiers = requestConfiguration.testDeviceIdentifiers;\n  }\n\n  return out;\n}\n"]}