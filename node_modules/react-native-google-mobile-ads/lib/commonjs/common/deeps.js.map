{"version":3,"sources":["deeps.ts"],"names":["deepGet","object","path","joiner","Array","isArray","undefined","keys","split","i","value","len","length","key","Object","hasOwnProperty","call","deepSet","initPaths","_object","Number","isNaN"],"mappings":";;;;;;;;AAiBA;;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,OAAT,CAAiBC,MAAjB,EAAkDC,IAAlD,EAA8E;AAAA,MAAdC,MAAc,uEAAL,GAAK;;AACnF,MAAI,CAAC,wBAASF,MAAT,CAAD,IAAqB,CAACG,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAA1B,EAAiD;AAC/C,WAAOK,SAAP;AACD;;AACD,QAAMC,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWL,MAAX,CAAb;AAEA,MAAIM,CAAC,GAAG,CAAR;AACA,MAAIC,KAAJ;AACA,QAAMC,GAAG,GAAGJ,IAAI,CAACK,MAAjB;;AAEA,SAAOH,CAAC,GAAGE,GAAX,EAAgB;AACd,UAAME,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAF,CAAhB;;AACA,QAAI,CAACR,MAAD,IAAW,CAACa,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2Bf,MAA3B,EAAmCY,GAAnC,CAAhB,EAAyD;AACvD,aAAOP,SAAP;AACD;;AACDI,IAAAA,KAAK,GAAGT,MAAM,CAACY,GAAD,CAAd;AACD;;AAED,SAAOH,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASO,OAAT,CACLhB,MADK,EAELC,IAFK,EAGLQ,KAHK,EAML;AAAA,MAFAQ,SAEA,uEAFY,IAEZ;AAAA,MADAf,MACA,uEADS,GACT;;AACA,MAAI,CAAC,wBAASF,MAAT,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,QAAMM,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWL,MAAX,CAAb;AAEA,MAAIM,CAAC,GAAG,CAAR;AACA,MAAIU,OAAO,GAAGlB,MAAd;AACA,QAAMU,GAAG,GAAGJ,IAAI,CAACK,MAAL,GAAc,CAA1B;;AAEA,SAAOH,CAAC,GAAGE,GAAX,EAAgB;AACd,UAAME,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAF,CAAhB;;AACA,QAAIS,SAAS,IAAI,CAACJ,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2Bf,MAA3B,EAAmCY,GAAnC,CAAlB,EAA2D;AACzDM,MAAAA,OAAO,CAACN,GAAD,CAAP,GAAe,EAAf;AACD;;AACDM,IAAAA,OAAO,GAAGA,OAAO,CAACN,GAAD,CAAjB;AACD;;AAED,MAAI,wBAASM,OAAT,KAAsB,uBAAQA,OAAR,KAAoB,CAACC,MAAM,CAACC,KAAP,CAAad,IAAI,CAACE,CAAD,CAAjB,CAA/C,EAAuE;AACrEU,IAAAA,OAAO,CAACZ,IAAI,CAACE,CAAD,CAAL,CAAP,GAAmBC,KAAnB;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isObject } from './validate';\n\n/**\n * Deep get a value from an object.\n * @website https://github.com/Salakar/deeps\n * @param object\n * @param path\n * @param joiner\n * @returns {*}\n */\nexport function deepGet(object: Record<string, unknown>, path: string, joiner = '/') {\n  if (!isObject(object) && !Array.isArray(object)) {\n    return undefined;\n  }\n  const keys = path.split(joiner);\n\n  let i = 0;\n  let value;\n  const len = keys.length;\n\n  while (i < len) {\n    const key = keys[i++];\n    if (!object || !Object.hasOwnProperty.call(object, key)) {\n      return undefined;\n    }\n    value = object[key];\n  }\n\n  return value;\n}\n\n/**\n * Deep set a value\n * @param object\n * @param path\n * @param value\n * @param initPaths\n * @param joiner\n */\nexport function deepSet(\n  object: Record<string, unknown>,\n  path: string,\n  value: unknown,\n  initPaths = true,\n  joiner = '.',\n) {\n  if (!isObject(object)) {\n    return false;\n  }\n  const keys = path.split(joiner);\n\n  let i = 0;\n  let _object = object;\n  const len = keys.length - 1;\n\n  while (i < len) {\n    const key = keys[i++];\n    if (initPaths && !Object.hasOwnProperty.call(object, key)) {\n      _object[key] = {};\n    }\n    _object = _object[key] as Record<string, unknown>;\n  }\n\n  if (isObject(_object) || (isArray(_object) && !Number.isNaN(keys[i]))) {\n    _object[keys[i]] = value;\n  } else {\n    return false;\n  }\n\n  return true;\n}\n"]}