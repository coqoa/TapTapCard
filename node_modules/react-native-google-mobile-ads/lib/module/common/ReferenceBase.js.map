{"version":3,"sources":["ReferenceBase.ts"],"names":["ReferenceBase","constructor","_path","path","length","endsWith","substring","startsWith","key","lastIndexOf"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,aAAN,CAAoB;AAGzBC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AAAA;;AACzB,QAAIC,IAAI,GAAGD,KAAX;;AAEA,QAAIC,IAAJ,EAAU;AACRA,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,GAAc,CAAd,IAAmBD,IAAI,CAACE,QAAL,CAAc,GAAd,CAAnB,GAAwCF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACC,MAAL,GAAc,CAAhC,CAAxC,GAA6ED,IAApF;;AACA,UAAIA,IAAI,CAACI,UAAL,CAAgB,GAAhB,KAAwBJ,IAAI,CAACC,MAAL,GAAc,CAA1C,EAA6C;AAC3CD,QAAAA,IAAI,GAAGA,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACC,MAAvB,CAAP;AACD;AACF,KALD,MAKO;AACLD,MAAAA,IAAI,GAAG,GAAP;AACD;;AAED,SAAKA,IAAL,GAAYA,IAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACS,MAAHK,GAAG,GAAG;AACR,WAAO,KAAKL,IAAL,KAAc,GAAd,GAAoB,IAApB,GAA2B,KAAKA,IAAL,CAAUG,SAAV,CAAoB,KAAKH,IAAL,CAAUM,WAAV,CAAsB,GAAtB,IAA6B,CAAjD,CAAlC;AACD;;AA1BwB","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport class ReferenceBase {\n  path: string;\n\n  constructor(_path: string) {\n    let path = _path;\n\n    if (path) {\n      path = path.length > 1 && path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n      if (path.startsWith('/') && path.length > 1) {\n        path = path.substring(1, path.length);\n      }\n    } else {\n      path = '/';\n    }\n\n    this.path = path;\n  }\n\n  /**\n   * The last part of a Reference's path (after the last '/')\n   * The key of a root Reference is null.\n   * @type {String}\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#key}\n   */\n  get key() {\n    return this.path === '/' ? null : this.path.substring(this.path.lastIndexOf('/') + 1);\n  }\n}\n"]}