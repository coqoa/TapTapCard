{"version":3,"sources":["MutatableParams.ts"],"names":["deepGet","deepSet","MutatableParams","constructor","parentInstance","_mutatableParams","_parentInstance","set","param","value","get","toJSON","Object","assign","validate"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,SAAjC;AAEA,OAAO,MAAMC,eAAN,CAAsB;AAI3BC,EAAAA,WAAW,CAACC,cAAD,EAAkC;AAAA;;AAAA;;AAC3C,QAAIA,cAAJ,EAAoB;AAClB,WAAKC,gBAAL,GAAwBD,cAAc,CAACC,gBAAvC;AACA,WAAKC,eAAL,GAAuBF,cAAvB;AACD,KAHD,MAGO;AACL,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKC,eAAL,GAAuB,IAAvB;AACD;AACF;;AAEDC,EAAAA,GAAG,CAACC,KAAD,EAAgBC,KAAhB,EAAgC;AACjCR,IAAAA,OAAO,CAAC,KAAKI,gBAAN,EAAwBG,KAAxB,EAA+BC,KAA/B,CAAP;AACA,WAAO,KAAKH,eAAZ;AACD;;AAEDI,EAAAA,GAAG,CAACF,KAAD,EAAgB;AACjB,WAAOR,OAAO,CAAC,KAAKK,gBAAN,EAAwBG,KAAxB,EAA+B,GAA/B,CAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKR,gBAAvB,CAAP;AACD;;AAEDS,EAAAA,QAAQ,GAAG,CACT;AACD;;AA7B0B","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { deepGet, deepSet } from './deeps';\n\nexport class MutatableParams {\n  _mutatableParams: Record<string, unknown>;\n  _parentInstance: MutatableParams;\n\n  constructor(parentInstance: MutatableParams) {\n    if (parentInstance) {\n      this._mutatableParams = parentInstance._mutatableParams;\n      this._parentInstance = parentInstance;\n    } else {\n      this._mutatableParams = {};\n      this._parentInstance = this;\n    }\n  }\n\n  set(param: string, value: unknown) {\n    deepSet(this._mutatableParams, param, value);\n    return this._parentInstance;\n  }\n\n  get(param: string) {\n    return deepGet(this._mutatableParams, param, '.');\n  }\n\n  toJSON() {\n    return Object.assign({}, this._mutatableParams);\n  }\n\n  validate() {\n    // do nothing\n  }\n}\n"]}