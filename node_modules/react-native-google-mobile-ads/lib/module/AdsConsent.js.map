{"version":3,"sources":["AdsConsent.ts"],"names":["TCModel","TCString","NativeModules","AdsConsentDebugGeography","AdsConsentPurposes","AdsConsentSpecialFeatures","hasOwnProperty","isArray","isBoolean","isObject","isString","native","RNGoogleMobileAdsConsentModule","AdsConsent","requestInfoUpdate","options","Error","debugGeography","DISABLED","EEA","NOT_EEA","tagForUnderAgeOfConsent","testDeviceIdentifiers","deviceId","showForm","reset","getTCString","getTCModel","tcString","decode","getUserChoices","tcModel","e","__DEV__","console","warn","activelyScanDeviceCharacteristicsForIdentification","specialFeatureOptins","has","ACTIVELY_SCAN_DEVICE_CHARACTERISTICS_FOR_IDENTIFICATION","applyMarketResearchToGenerateAudienceInsights","purposeConsents","APPLY_MARKET_RESEARCH_TO_GENERATE_AUDIENCE_INSIGHTS","createAPersonalisedAdsProfile","CREATE_A_PERSONALISED_ADS_PROFILE","createAPersonalisedContentProfile","developAndImproveProducts","DEVELOP_AND_IMPROVE_PRODUCTS","measureAdPerformance","MEASURE_AD_PERFORMANCE","measureContentPerformance","MEASURE_CONTENT_PERFORMANCE","selectBasicAds","SELECT_BASIC_ADS","selectPersonalisedAds","SELECT_PERSONALISED_ADS","selectPersonalisedContent","SELECT_PERSONALISED_CONTENT","storeAndAccessInformationOnDevice","STORE_AND_ACCESS_INFORMATION_ON_DEVICE","usePreciseGeolocationData","USE_PRECISE_GEOLOCATION_DATA"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { TCModel, TCString } from '@iabtcf/core';\nimport { NativeModules } from 'react-native';\nimport { AdsConsentDebugGeography } from './AdsConsentDebugGeography';\nimport { AdsConsentPurposes } from './AdsConsentPurposes';\nimport { AdsConsentSpecialFeatures } from './AdsConsentSpecialFeatures';\nimport { hasOwnProperty, isArray, isBoolean, isObject, isString } from './common';\nimport {\n  AdsConsentFormResult,\n  AdsConsentInfo,\n  AdsConsentInfoOptions,\n  AdsConsentInterface,\n  AdsConsentUserChoices,\n} from './types/AdsConsent.interface';\n\nconst native = NativeModules.RNGoogleMobileAdsConsentModule;\n\nexport const AdsConsent: AdsConsentInterface = {\n  requestInfoUpdate(options: AdsConsentInfoOptions = {}): Promise<AdsConsentInfo> {\n    if (!isObject(options)) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options' expected an object value.\");\n    }\n\n    if (\n      hasOwnProperty(options, 'debugGeography') &&\n      options.debugGeography !== AdsConsentDebugGeography.DISABLED &&\n      options.debugGeography !== AdsConsentDebugGeography.EEA &&\n      options.debugGeography !== AdsConsentDebugGeography.NOT_EEA\n    ) {\n      throw new Error(\n        \"AdsConsent.requestInfoUpdate(*) 'options.debugGeography' expected one of AdsConsentDebugGeography.DISABLED, AdsConsentDebugGeography.EEA or AdsConsentDebugGeography.NOT_EEA.\",\n      );\n    }\n\n    if (\n      hasOwnProperty(options, 'tagForUnderAgeOfConsent') &&\n      !isBoolean(options.tagForUnderAgeOfConsent)\n    ) {\n      throw new Error(\n        \"AdsConsent.requestInfoUpdate(*) 'options.tagForUnderAgeOfConsent' expected a boolean value.\",\n      );\n    }\n\n    if (hasOwnProperty(options, 'testDeviceIdentifiers')) {\n      if (!isArray(options.testDeviceIdentifiers)) {\n        throw new Error(\n          \"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\",\n        );\n      }\n\n      for (const deviceId of options.testDeviceIdentifiers ?? []) {\n        if (!isString(deviceId)) {\n          throw new Error(\n            \"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\",\n          );\n        }\n      }\n    }\n\n    return native.requestInfoUpdate(options);\n  },\n\n  showForm(): Promise<AdsConsentFormResult> {\n    return native.showForm();\n  },\n\n  reset(): void {\n    return native.reset();\n  },\n\n  getTCString(): Promise<string> {\n    return native.getTCString();\n  },\n\n  async getTCModel(): Promise<TCModel> {\n    const tcString = await native.getTCString();\n    return TCString.decode(tcString);\n  },\n\n  async getUserChoices(): Promise<AdsConsentUserChoices> {\n    const tcString = await native.getTCString();\n\n    let tcModel: TCModel;\n\n    try {\n      tcModel = TCString.decode(tcString);\n    } catch (e) {\n      tcModel = new TCModel();\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to decode tcString ${tcString}:`, e);\n      }\n    }\n\n    return {\n      activelyScanDeviceCharacteristicsForIdentification: tcModel.specialFeatureOptins.has(\n        AdsConsentSpecialFeatures.ACTIVELY_SCAN_DEVICE_CHARACTERISTICS_FOR_IDENTIFICATION,\n      ),\n      applyMarketResearchToGenerateAudienceInsights: tcModel.purposeConsents.has(\n        AdsConsentPurposes.APPLY_MARKET_RESEARCH_TO_GENERATE_AUDIENCE_INSIGHTS,\n      ),\n      createAPersonalisedAdsProfile: tcModel.purposeConsents.has(\n        AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE,\n      ),\n      createAPersonalisedContentProfile: tcModel.purposeConsents.has(\n        AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE,\n      ),\n      developAndImproveProducts: tcModel.purposeConsents.has(\n        AdsConsentPurposes.DEVELOP_AND_IMPROVE_PRODUCTS,\n      ),\n      measureAdPerformance: tcModel.purposeConsents.has(AdsConsentPurposes.MEASURE_AD_PERFORMANCE),\n      measureContentPerformance: tcModel.purposeConsents.has(\n        AdsConsentPurposes.MEASURE_CONTENT_PERFORMANCE,\n      ),\n      selectBasicAds: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_BASIC_ADS),\n      selectPersonalisedAds: tcModel.purposeConsents.has(\n        AdsConsentPurposes.SELECT_PERSONALISED_ADS,\n      ),\n      selectPersonalisedContent: tcModel.purposeConsents.has(\n        AdsConsentPurposes.SELECT_PERSONALISED_CONTENT,\n      ),\n      storeAndAccessInformationOnDevice: tcModel.purposeConsents.has(\n        AdsConsentPurposes.STORE_AND_ACCESS_INFORMATION_ON_DEVICE,\n      ),\n      usePreciseGeolocationData: tcModel.specialFeatureOptins.has(\n        AdsConsentSpecialFeatures.USE_PRECISE_GEOLOCATION_DATA,\n      ),\n    };\n  },\n};\n"]}