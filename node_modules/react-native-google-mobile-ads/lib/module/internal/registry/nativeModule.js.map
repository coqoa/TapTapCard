{"version":3,"sources":["nativeModule.ts"],"names":["NativeModules","Platform","APP_NATIVE_MODULE","NativeError","GoogleMobileAdsNativeEventEmitter","SharedEventEmitter","isFunction","NATIVE_MODULE_REGISTRY","NATIVE_MODULE_EVENT_SUBSCRIPTIONS","nativeModuleKey","module","_customUrlOrRegion","app","name","_config","namespace","nativeModuleMethodWrapped","method","argToPrepend","args","possiblePromise","then","jsStack","Error","stack","catch","nativeError","Promise","reject","nativeModuleWrapped","NativeModule","native","properties","Object","keys","i","len","length","property","initialiseNativeModule","config","key","nativeEvents","nativeModuleName","multiModuleRoot","multiModule","Array","isArray","nativeModuleNames","nativeModule","getMissingModuleHelpText","assign","subscribeToNativeModuleEvent","freeze","eventName","addListener","event","appName","emit","snippet","charAt","toUpperCase","slice","OS","rnPackage","newInstance","getNativeModule","getAppModule"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules, Platform } from 'react-native';\nimport { APP_NATIVE_MODULE } from '../constants';\nimport { NativeError } from '../NativeError';\nimport { GoogleMobileAdsNativeEventEmitter } from '../GoogleMobileAdsNativeEventEmitter';\nimport { SharedEventEmitter } from '../SharedEventEmitter';\nimport { isFunction } from '../../common';\nimport { ModuleInterface } from '../../types/Module.interface';\n\nconst NATIVE_MODULE_REGISTRY: Record<string, unknown> = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS: Record<string, unknown> = {};\n\nfunction nativeModuleKey(module: ModuleInterface) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\n\n/**\n * Wraps a native module method to provide\n * auto prepended args and custom Error classes.\n *\n * @param namespace\n * @param method\n * @param argToPrepend\n * @returns {Function}\n */\nfunction nativeModuleMethodWrapped(\n  namespace: string,\n  method: (...args: unknown[]) => Promise<unknown> | void,\n  argToPrepend: [],\n) {\n  return (...args: []) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack || '';\n      return possiblePromise.catch(nativeError =>\n        Promise.reject(new NativeError(nativeError, jsStack, namespace)),\n      );\n    }\n\n    return possiblePromise;\n  };\n}\n\n/**\n * Prepends all arguments in prependArgs to all native method calls\n *\n * @param namespace\n * @param NativeModule\n * @param argToPrepend\n */\nfunction nativeModuleWrapped(\n  namespace: string,\n  NativeModule: Record<string, (...args: unknown[]) => Promise<unknown> | void>,\n  argToPrepend: [],\n) {\n  const native: Record<string, unknown> = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  const properties = Object.keys(NativeModule);\n\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (isFunction(NativeModule[property])) {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\n/**\n * Initialises and wraps all the native module methods.\n *\n * @param module\n * @returns {*}\n */\nfunction initialiseNativeModule(module: ModuleInterface) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const { namespace, nativeEvents, nativeModuleName } = config;\n  const multiModuleRoot: Record<string, unknown> = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = NativeModules[nativeModuleNames[i]];\n\n    // only error if there's a single native module\n    // as multi modules can mean some are optional\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, []));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param eventName\n * @private\n */\nfunction subscribeToNativeModuleEvent(eventName: string) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    GoogleMobileAdsNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\n/**\n * Help text for integrating the native counter parts for each module.\n *\n * @param namespace\n * @returns {string}\n */\nfunction getMissingModuleHelpText(namespace: string) {\n  const snippet = `${namespace}()`;\n  const nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n\n  if (Platform.OS === 'ios') {\n    return (\n      `You attempted to use a module that's not installed natively on your iOS project by calling ${snippet}.` +\n      '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' +\n      '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.'\n    );\n  }\n\n  const rnPackage = `'io.invertase.${namespace}.ReactNative${nativeModule}Package'`;\n  const newInstance = `'new ReactNative${nativeModule}Package()'`;\n\n  return (\n    `You attempted to use a module that's not installed on your Android project by calling ${snippet}.` +\n    `\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the ${rnPackage} module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the ` +\n    `${newInstance} line inside of the RN 'getPackages()' method list.` +\n    '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.'\n  );\n}\n\n/**\n * Gets a wrapped native module instance for the provided module.\n * Will attempt to create a new instance if non previously created.\n *\n * @param module\n * @returns {*}\n */\nexport function getNativeModule(module: ModuleInterface) {\n  const key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\n/**\n * Custom wrapped app module as it does not have it's own FirebaseModule based class.\n *\n * @returns {*}\n */\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n\n  const namespace = 'app';\n  const nativeModule = NativeModules[APP_NATIVE_MODULE];\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}\n"]}