{"version":3,"sources":["MobileAds.ts"],"names":["Module","validateAdRequestConfiguration","version","namespace","nativeModuleName","MobileAdsModule","constructor","app","config","emitter","addListener","event","emit","adUnitId","requestId","initialize","native","setRequestConfiguration","requestConfiguration","e","Error","message","openAdInspector","MobileAdsInstance","name","nativeEvents","MobileAds"],"mappings":"AAAA,SAASA,MAAT,QAAuB,YAAvB;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AACA,SAASC,OAAT,QAAwB,WAAxB;AAKA,MAAMC,SAAS,GAAG,mBAAlB;AAEA,MAAMC,gBAAgB,GAAG,CACvB,yBADuB,EAEvB,gCAFuB,EAGvB,qCAHuB,EAIvB,iCAJuB,EAKvB,6CALuB,CAAzB;;AAaA,MAAMC,eAAN,SAA8BL,MAA9B,CAAyE;AACvEM,EAAAA,WAAW,CAACC,GAAD,EAAWC,MAAX,EAA2B;AACpC,UAAMD,GAAN,EAAWC,MAAX;AAEA,SAAKC,OAAL,CAAaC,WAAb,CAAyB,kCAAzB,EAA8DC,KAAD,IAAkB;AAC7E,WAAKF,OAAL,CAAaG,IAAb,CACG,oCAAmCD,KAAK,CAACE,QAAS,IAAGF,KAAK,CAACG,SAAU,EADxE,EAEEH,KAFF;AAID,KALD;AAOA,SAAKF,OAAL,CAAaC,WAAb,CAAyB,sCAAzB,EAAkEC,KAAD,IAAkB;AACjF,WAAKF,OAAL,CAAaG,IAAb,CACG,wCAAuCD,KAAK,CAACE,QAAS,IAAGF,KAAK,CAACG,SAAU,EAD5E,EAEEH,KAFF;AAID,KALD;AAOA,SAAKF,OAAL,CAAaC,WAAb,CAAyB,kCAAzB,EAA8DC,KAAD,IAAkB;AAC7E,WAAKF,OAAL,CAAaG,IAAb,CACG,oCAAmCD,KAAK,CAACE,QAAS,IAAGF,KAAK,CAACG,SAAU,EADxE,EAEEH,KAFF;AAID,KALD;AAOA,SAAKF,OAAL,CAAaC,WAAb,CAAyB,+CAAzB,EAA2EC,KAAD,IAAkB;AAC1F,WAAKF,OAAL,CAAaG,IAAb,CACG,iDAAgDD,KAAK,CAACE,QAAS,IAAGF,KAAK,CAACG,SAAU,EADrF,EAEEH,KAFF;AAID,KALD;AAMD;;AAEDI,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKC,MAAL,CAAYD,UAAZ,EAAP;AACD;;AAEDE,EAAAA,uBAAuB,CAACC,oBAAD,EAA6C;AAClE,QAAIV,MAAJ;;AACA,QAAI;AACFA,MAAAA,MAAM,GAAGP,8BAA8B,CAACiB,oBAAD,CAAvC;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,UAAIA,CAAC,YAAYC,KAAjB,EAAwB;AACtB,cAAM,IAAIA,KAAJ,CAAW,8CAA6CD,CAAC,CAACE,OAAQ,EAAlE,CAAN;AACD;AACF;;AAED,WAAO,KAAKL,MAAL,CAAYC,uBAAZ,CAAoCT,MAApC,CAAP;AACD;;AAEDc,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKN,MAAL,CAAYM,eAAZ,EAAP;AACD;;AApDsE;;AAuDzE,MAAMC,iBAAiB,GAAG,IAAIlB,eAAJ,CACxB;AAAEmB,EAAAA,IAAI,EAAE;AAAR,CADwB,EAExB;AACEtB,EAAAA,OADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,gBAHF;AAIEqB,EAAAA,YAAY,EAAE,CACZ,kCADY,EAEZ,sCAFY,EAGZ,kCAHY,EAIZ,+CAJY;AAJhB,CAFwB,CAA1B;AAeA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAOH,iBAAP;AACD,CAFM;AAIP,eAAeG,SAAf","sourcesContent":["import { Module } from './internal';\nimport { validateAdRequestConfiguration } from './validateAdRequestConfiguration';\nimport { version } from './version';\nimport { MobileAdsModuleInterface } from './types/MobileAdsModule.interface';\nimport { RequestConfiguration } from './types/RequestConfiguration';\nimport { App, Config } from './types/Module.interface';\n\nconst namespace = 'google_mobile_ads';\n\nconst nativeModuleName = [\n  'RNGoogleMobileAdsModule',\n  'RNGoogleMobileAdsAppOpenModule',\n  'RNGoogleMobileAdsInterstitialModule',\n  'RNGoogleMobileAdsRewardedModule',\n  'RNGoogleMobileAdsRewardedInterstitialModule',\n];\n\ntype Event = {\n  adUnitId: string;\n  requestId: number;\n};\n\nclass MobileAdsModule extends Module implements MobileAdsModuleInterface {\n  constructor(app: App, config: Config) {\n    super(app, config);\n\n    this.emitter.addListener('google_mobile_ads_app_open_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_app_open_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_interstitial_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_interstitial_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_rewarded_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_rewarded_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_rewarded_interstitial_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_rewarded_interstitial_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n  }\n\n  initialize() {\n    return this.native.initialize();\n  }\n\n  setRequestConfiguration(requestConfiguration: RequestConfiguration) {\n    let config;\n    try {\n      config = validateAdRequestConfiguration(requestConfiguration);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw new Error(`googleMobileAds.setRequestConfiguration(*) ${e.message}`);\n      }\n    }\n\n    return this.native.setRequestConfiguration(config);\n  }\n\n  openAdInspector() {\n    return this.native.openAdInspector();\n  }\n}\n\nconst MobileAdsInstance = new MobileAdsModule(\n  { name: 'AppName' },\n  {\n    version,\n    namespace,\n    nativeModuleName,\n    nativeEvents: [\n      'google_mobile_ads_app_open_event',\n      'google_mobile_ads_interstitial_event',\n      'google_mobile_ads_rewarded_event',\n      'google_mobile_ads_rewarded_interstitial_event',\n    ],\n  },\n);\n\nexport const MobileAds = () => {\n  return MobileAdsInstance;\n};\n\nexport default MobileAds;\n"]}