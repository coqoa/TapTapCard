{"version":3,"sources":["validateAdRequestOptions.ts"],"names":["hasOwnProperty","isArray","isBoolean","isObject","isString","isUndefined","isValidUrl","validateAdRequestOptions","options","out","Error","requestNonPersonalizedAdsOnly","networkExtras","Object","entries","forEach","key","value","keywords","i","length","keyword","contentUrl","requestAgent","serverSideVerificationOptions","ssvOptions","userId","customData","customTargeting"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  hasOwnProperty,\n  isArray,\n  isBoolean,\n  isObject,\n  isString,\n  isUndefined,\n  isValidUrl,\n} from './common';\nimport { RequestOptions } from './types/RequestOptions';\n\nexport function validateAdRequestOptions(options?: RequestOptions) {\n  const out: RequestOptions = {};\n\n  if (isUndefined(options)) {\n    return out;\n  }\n\n  if (!isObject(options)) {\n    throw new Error(\"'options' expected an object value\");\n  }\n\n  if (hasOwnProperty(options, 'requestNonPersonalizedAdsOnly')) {\n    if (!isBoolean(options.requestNonPersonalizedAdsOnly)) {\n      throw new Error(\"'options.requestNonPersonalizedAdsOnly' expected a boolean value\");\n    }\n\n    out.requestNonPersonalizedAdsOnly = options.requestNonPersonalizedAdsOnly;\n  }\n\n  if (options.networkExtras) {\n    if (!isObject(options.networkExtras)) {\n      throw new Error(\"'options.networkExtras' expected an object of key/value pairs\");\n    }\n\n    Object.entries(options.networkExtras).forEach(([key, value]) => {\n      if (!isString(value)) {\n        throw new Error(`'options.networkExtras' expected a string value for object key \"${key}\"`);\n      }\n    });\n\n    out.networkExtras = options.networkExtras;\n  }\n\n  if (options.keywords) {\n    if (!isArray(options.keywords)) {\n      throw new Error(\"'options.keywords' expected an array containing string values\");\n    }\n\n    for (let i = 0; i < options.keywords.length; i++) {\n      const keyword = options.keywords[i];\n\n      if (!isString(keyword)) {\n        throw new Error(\"'options.keywords' expected an array containing string values\");\n      }\n    }\n\n    out.keywords = options.keywords;\n  }\n\n  if (options.contentUrl) {\n    if (!isString(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a string value\");\n    }\n\n    if (!isValidUrl(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a valid HTTP or HTTPS url.\");\n    }\n\n    if (options.contentUrl.length > 512) {\n      throw new Error(\"'options.contentUrl' maximum length of a content URL is 512 characters.\");\n    }\n\n    out.contentUrl = options.contentUrl;\n  }\n\n  if (options.requestAgent) {\n    if (!isString(options.requestAgent)) {\n      throw new Error(\"'options.requestAgent' expected a string value\");\n    }\n\n    out.requestAgent = options.requestAgent;\n  }\n\n  if (options.serverSideVerificationOptions) {\n    if (!isObject(options.serverSideVerificationOptions)) {\n      throw new Error(\n        \"'options.serverSideVerificationOptions' expected an object of key/value pairs\",\n      );\n    }\n\n    const ssvOptions = options.serverSideVerificationOptions;\n\n    if (ssvOptions.userId && !isString(ssvOptions.userId)) {\n      throw new Error(\"'options.serverSideVerificationOptions.userId' expected a string value\");\n    }\n\n    if (ssvOptions.customData && !isString(ssvOptions.customData)) {\n      throw new Error(\"'options.serverSideVerificationOptions.customData' expected a string value\");\n    }\n\n    out.serverSideVerificationOptions = options.serverSideVerificationOptions;\n  }\n\n  if (options.customTargeting) {\n    if (!isObject(options.customTargeting)) {\n      throw new Error(\"'options.customTargeting' expected an object of key/value pairs\");\n    }\n    out.customTargeting = options.customTargeting;\n  }\n\n  return out;\n}\n"]}