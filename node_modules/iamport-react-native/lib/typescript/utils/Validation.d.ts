declare class Validation {
    userCode: string;
    loading: object;
    callback: ((response: any) => any) | undefined;
    data: IMPData.CertificationData | IMPData.PaymentData | undefined;
    isValid: boolean;
    message: string;
    constructor(userCode: string, loading: object, callback?: (response: any) => any, data?: IMPData.CertificationData | IMPData.PaymentData);
    validateUserCode(): void;
    validateLoading(): void;
    validateCallback(): void;
    validateData(): void;
    getIsValid(): boolean;
    getMessage(): string;
}
declare namespace IMPData {
    interface CertificationData {
        merchant_uid: string;
        company: string;
        carrier: string;
        name: string;
        phone: string;
        min_age?: string;
        m_redirect_url?: string;
    }
    interface PaymentData {
        pg: string;
        pay_method: string;
        currency?: string;
        notice_url?: string | string[];
        display?: {
            card_quota: number[];
        };
        merchant_uid: string;
        amount: string | number;
        buyer_tel: string;
        app_scheme?: string;
        escrow: boolean;
        name: string;
        tax_free?: number;
        buyer_name: string;
        buyer_email: string;
        buyer_addr?: string;
        buyer_postcode?: string;
        custom_data?: object;
        vbank_due?: string;
        popup?: boolean;
        digital?: boolean;
        language?: string;
        biz_num?: string;
        customer_uid?: string;
        naverPopupMode?: boolean;
        naverUseCfm?: string;
        naverProducts?: object[];
        m_redirect_url?: string;
    }
}
export { Validation, IMPData };
