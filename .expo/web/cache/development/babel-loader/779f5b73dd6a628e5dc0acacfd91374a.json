{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17;\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styled from \"styled-components\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { WordCardArray } from \"../asset/data/WordCardArray\";\nimport { colors } from \"../component/color\";\nimport { WordCard1LV, WordCard2LV, WordCard3LV } from \"../component/CardDefault\";\nimport Pressable from \"react-native/Libraries/Components/Pressable/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get(\"window\").width;\nvar SCREEN_HEIGHT = Dimensions.get(\"window\").height;\nvar Loader = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nvar Shell = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    background-color: white;\\n    align-items: center;\\n\"])));\nvar Top = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    height: 80px;\\n    flex-direction: row;\\n\"])));\nvar GoBack = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n    width: 60px;\\n    align-items: center;\\n    justify-content: center;\\n\"])));\nvar GoBackBtn = styled.Pressable(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n    width: 60px;\\n    height: 60px;\\n\"])));\nvar GoBackBtnImage = styled.Image(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n    width: 100%;\\n    height: 100%;\\n\"])));\nvar Star = styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n\"])));\nvar StarView = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n    width: 170px;\\n    height: 60px;\\n    align-items: center;\\n    justify-content: center;\\n\"])));\nvar StarViewImage = styled.ImageBackground(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n    top: 2px;\\n    width: 220px;\\n    height: 70px;\\n    /* border: 1px solid gray; */\\n\"])));\nvar Menu = styled.View(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n    width: 60px;\\n    align-items: center;\\n    justify-content: center;\\n    /* border: 1px solid red ; */\\n\"])));\nvar MenuBtn = styled.Pressable(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n    top: 5px;\\n    width: 65px;\\n    height: 65px;\\n\"])));\nvar MenuBtnImage = styled.ImageBackground(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n    width: 100%;\\n    height: 100%;\\n\"])));\nvar MenuModalBg = styled.Pressable(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\"])));\nvar MenuModalContainer = styled.View(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n    position: absolute;\\n    top: 60px;\\n    right: 10px;\\n    width: 200px;\\n    height: 200px;\\n    border-radius: 20px;\\n    align-items: center;\\n    justify-content: center;\\n    background-color: white;\\n    box-shadow: 0px 1px 5px rgba(0,0,0,0.3);\\n\"])));\nvar MenuModal = styled.View(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n    width: 90%;\\n    height: 90%;\\n\"])));\nvar LevelBtn = styled.Pressable(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n    margin: 5px;\\n    border-radius: 15px;\\n    background-color: \", \";\\n    box-shadow: 0px 1px 3px \", \";\\n\"])), colors.LIGHTBLUE, colors.LIGHTBLUE);\nvar Main = styled.View(_templateObject17 || (_templateObject17 = _taggedTemplateLiteralLoose([\"\\n    flex: 5;\\n    flex-direction: row;\\n    /* border: 1px solid red ; */\\n\"])));\n\nvar WordPlay = function WordPlay(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cardSelector = _useState4[0],\n      setCardSelector = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalToggle = _useState6[0],\n      setModalToggle = _useState6[1];\n\n  var cardCheck = function cardCheck(e) {\n    setCardSelector(e);\n    setModalToggle(!modalToggle);\n    console.log(e);\n  };\n\n  var modalTogglePress = function modalTogglePress() {\n    return setModalToggle(!modalToggle);\n  };\n\n  useEffect(function () {\n    if (cardSelector == undefined) {\n      setCardSelector(\"word3LV\");\n    }\n\n    setLoading(false);\n  }, []);\n  return loading ? _jsx(Loader, {\n    children: _jsx(ActivityIndicator, {})\n  }) : _jsxs(Shell, {\n    children: [_jsxs(Top, {\n      children: [_jsx(GoBack, {\n        children: _jsx(GoBackBtn, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(GoBackBtnImage, {\n            source: require(\"../asset/images/goBack1.png\")\n          })\n        })\n      }), _jsx(Star, {\n        children: _jsx(StarView, {\n          children: function () {\n            if (cardSelector === \"word1LV\") return _jsx(StarViewImage, {\n              source: require(\"../asset/images/Star1.png\")\n            });else if (cardSelector == \"word2LV\") return _jsx(StarViewImage, {\n              source: require(\"../asset/images/Star2.png\")\n            });else if (cardSelector == \"word3LV\") return _jsx(StarViewImage, {\n              source: require(\"../asset/images/Star3.png\")\n            });else return _jsx(StarViewImage, {\n              source: require(\"../asset/images/Star1.png\")\n            });\n          }()\n        })\n      }), _jsx(Menu, {\n        children: _jsx(MenuBtn, {\n          onPress: function onPress() {\n            return modalTogglePress();\n          },\n          children: _jsx(MenuBtnImage, {\n            source: require(\"../asset/images/MenuBar.png\")\n          })\n        })\n      })]\n    }), _jsx(Main, {\n      children: function () {\n        if (cardSelector === \"word1LV\") return _jsx(WordCard1LV, {});else if (cardSelector == \"word2LV\") return _jsx(WordCard2LV, {});else if (cardSelector == \"word3LV\") return _jsx(WordCard3LV, {});else return _jsx(WordCard1LV, {});\n      }()\n    }), modalToggle == true ? _jsx(MenuModalBg, {\n      style: {\n        position: \"absolute\",\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        backgroundColor: \"rgba(0,0,0,0)\"\n      },\n      onPress: function onPress() {\n        modalTogglePress();\n      },\n      children: _jsx(MenuModalContainer, {\n        children: _jsxs(MenuModal, {\n          children: [_jsx(LevelBtn, {\n            onPress: function onPress() {\n              cardCheck(\"word1LV\");\n            },\n            children: _jsx(Text, {\n              children: \"1\\uB808\\uBCA8\"\n            })\n          }), _jsx(LevelBtn, {\n            onPress: function onPress() {\n              cardCheck(\"word2LV\");\n            },\n            children: _jsx(Text, {\n              children: \"2\\uB808\\uBCA8\"\n            })\n          }), _jsx(LevelBtn, {\n            onPress: function onPress() {\n              cardCheck(\"word3LV\");\n            },\n            children: _jsx(Text, {\n              children: \"3\\uB808\\uBCA8\"\n            })\n          })]\n        })\n      })\n    }) : null]\n  });\n};\n\nexport default WordPlay;","map":{"version":3,"sources":["/Users/coqoa/Downloads/RN-APP/taptapcard/app/screens/WordPlay.js"],"names":["React","useState","useEffect","styled","SafeAreaView","WordCardArray","colors","WordCard1LV","WordCard2LV","WordCard3LV","Pressable","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","Loader","View","Shell","Top","GoBack","GoBackBtn","GoBackBtnImage","Image","Star","StarView","StarViewImage","ImageBackground","Menu","MenuBtn","MenuBtnImage","MenuModalBg","MenuModalContainer","MenuModal","LevelBtn","LIGHTBLUE","Main","WordPlay","navigation","loading","setLoading","cardSelector","setCardSelector","modalToggle","setModalToggle","cardCheck","e","console","log","modalTogglePress","undefined","goBack","require","position","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Text, View, ActivityIndicator, FlatList, ScrollView,Dimensions } from \"react-native\";\r\nimport styled from \"styled-components\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { WordCardArray } from \"../asset/data/WordCardArray\";\r\nimport { colors } from \"../component/color\";\r\nimport { WordCard1LV, WordCard2LV, WordCard3LV } from \"../component/CardDefault\";\r\nimport Pressable from \"react-native/Libraries/Components/Pressable/Pressable\";\r\n\r\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\r\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\nconst Loader = styled.View`\r\n    flex: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst Shell = styled.View`\r\n    flex: 1;\r\n    background-color: white;\r\n    align-items: center;\r\n`\r\nconst Top = styled.View`\r\n    height: 80px;\r\n    flex-direction: row;\r\n`\r\nconst GoBack = styled.View`\r\n    width: 60px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst GoBackBtn = styled.Pressable`\r\n    width: 60px;\r\n    height: 60px;\r\n`\r\nconst GoBackBtnImage = styled.Image`\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\nconst Star = styled.View`\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst StarView = styled.View`\r\n    width: 170px;\r\n    height: 60px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst StarViewImage = styled.ImageBackground`\r\n    top: 2px;\r\n    width: 220px;\r\n    height: 70px;\r\n    /* border: 1px solid gray; */\r\n`\r\nconst Menu = styled.View`\r\n    width: 60px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* border: 1px solid red ; */\r\n`\r\nconst MenuBtn = styled.Pressable`\r\n    top: 5px;\r\n    width: 65px;\r\n    height: 65px;\r\n`\r\nconst MenuBtnImage = styled.ImageBackground`\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\nconst MenuModalBg = styled.Pressable``\r\n\r\nconst MenuModalContainer = styled.View`\r\n    position: absolute;\r\n    top: 60px;\r\n    right: 10px;\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: white;\r\n    box-shadow: 0px 1px 5px rgba(0,0,0,0.3);\r\n`\r\nconst MenuModal = styled.View`\r\n    width: 90%;\r\n    height: 90%;\r\n`\r\nconst LevelBtn = styled.Pressable`\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 5px;\r\n    border-radius: 15px;\r\n    background-color: ${colors.LIGHTBLUE};\r\n    box-shadow: 0px 1px 3px ${colors.LIGHTBLUE};\r\n`\r\nconst Main = styled.View`\r\n    flex: 5;\r\n    flex-direction: row;\r\n    /* border: 1px solid red ; */\r\n`\r\n\r\n\r\nconst WordPlay = ({navigation}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    const [cardSelector, setCardSelector] = useState();\r\n    const [modalToggle, setModalToggle] = useState(false);\r\n    \r\n    const cardCheck = (e) => {\r\n        setCardSelector(e);\r\n        setModalToggle(!modalToggle);\r\n        console.log(e);\r\n    }\r\n\r\n    const modalTogglePress = () => setModalToggle(!modalToggle)\r\n    useEffect(() => {\r\n        // ((cardSelector == undefined) ? setCardSelector(\"word1LV\") :null)\r\n        if(cardSelector == undefined) {\r\n            // setCardSelector(\"word1LV\")\r\n            setCardSelector(\"word3LV\")\r\n        } \r\n        setLoading(false)\r\n    }, []);\r\n    // console.log(cardSelector) // word1LV\r\n\r\n    // function CardFunction() {\r\n\r\n    //     return{\r\n    //         if(cardSelector==\"word1LV\"){\r\n    //             <WordCard1LV />\r\n    //         }else if(cardSelector==\"word2LV\"){\r\n    //             <WordCard2LV />\r\n    //         }else if(cardSelector==\"word3LV\"){\r\n    //             <WordCard3LV />\r\n    //         }else{\r\n    //             <WordCard1LV />\r\n    //         }\r\n    //     }\r\n        \r\n    // }\r\n    return( \r\n        loading ? (\r\n            <Loader>\r\n                <ActivityIndicator />\r\n            </Loader>\r\n        ) : (\r\n            <Shell>\r\n            <Top>\r\n                <GoBack>\r\n                    <GoBackBtn onPress={() => navigation.goBack()}>\r\n                        <GoBackBtnImage source={require(\"../asset/images/goBack1.png\")}></GoBackBtnImage>\r\n                    </GoBackBtn>\r\n                </GoBack>\r\n                <Star>\r\n                    <StarView>\r\n                        {(()=>{\r\n                            if(cardSelector === \"word1LV\") return <StarViewImage source={require(\"../asset/images/Star1.png\")}></StarViewImage>;\r\n                            else if(cardSelector==\"word2LV\") return <StarViewImage source={require(\"../asset/images/Star2.png\")}></StarViewImage>;\r\n                            else if(cardSelector==\"word3LV\") return <StarViewImage source={require(\"../asset/images/Star3.png\")}></StarViewImage>;\r\n                            else return <StarViewImage source={require(\"../asset/images/Star1.png\")}></StarViewImage>\r\n                        })()}\r\n                        {/* <StarViewImage source={require(\"../asset/images/Star.png\")}></StarViewImage> */}\r\n                    </StarView>\r\n                </Star>\r\n                <Menu>\r\n                    <MenuBtn onPress={() => modalTogglePress()}>\r\n                        <MenuBtnImage source={require(\"../asset/images/MenuBar.png\")}></MenuBtnImage>\r\n                    </MenuBtn>\r\n                </Menu>\r\n\r\n            </Top>\r\n            <Main>\r\n                {/* {CardFunction()} */}\r\n                {(()=>{\r\n                    if(cardSelector === \"word1LV\") return <WordCard1LV />;\r\n                    else if(cardSelector==\"word2LV\") return <WordCard2LV />;\r\n                    else if(cardSelector==\"word3LV\") return <WordCard3LV />;\r\n                    else return <WordCard1LV />\r\n                })()}\r\n                {/* {cardSelector==\"word1LV\" ? <WordCard1LV /> : null}\r\n                {cardSelector==\"word2LV\" ? <WordCard2LV /> : null}\r\n                {cardSelector==\"word3LV\" ? <WordCard3LV /> : null} */}\r\n            </Main>\r\n            {/* 모달창 178~180라인 왜 안되는지 확인... > 해결 */}\r\n            {modalToggle == true ? (\r\n                <MenuModalBg \r\n                style={{position:\"absolute\", width:SCREEN_WIDTH, height:SCREEN_HEIGHT, backgroundColor:\"rgba(0,0,0,0)\"}} \r\n                onPress={()=>{\r\n                    modalTogglePress()\r\n                }}>\r\n                    <MenuModalContainer>\r\n                        <MenuModal>\r\n                            {/* <LevelBtn onPress={()=>{setCardSelector(\"word1Lv\")}}><Text>1레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>{setCardSelector(\"word2Lv\")}}><Text>2레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>{setCardSelector(\"word3Lv\")}}><Text>3레벨</Text></LevelBtn> */}\r\n                            <LevelBtn onPress={()=>{cardCheck(\"word1LV\")}}><Text>1레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>{cardCheck(\"word2LV\")}}><Text>2레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>{cardCheck(\"word3LV\")}}><Text>3레벨</Text></LevelBtn>\r\n                            {/* <LevelBtn onPress={()=>console.log('1레벨')}><Text>1레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>console.log('2레벨')}><Text>2레벨</Text></LevelBtn>\r\n                            <LevelBtn onPress={()=>console.log('3레벨')}><Text>3레벨</Text></LevelBtn> */}\r\n                        </MenuModal>\r\n                    </MenuModalContainer>\r\n                </MenuModalBg>\r\n            ) : null\r\n            }\r\n            </Shell>\r\n        )\r\n    )\r\n}\r\nexport default WordPlay;"]},"metadata":{},"sourceType":"module"}