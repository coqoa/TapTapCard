{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Easing from \"react-native/Libraries/Animated/Easing\";\nimport styled from \"styled-components\";\nimport { wordCard } from \"../asset/data/wordCard\";\nimport { colors } from \"./color\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get(\"window\").width;\nvar SCREEN_HEIGHT = Dimensions.get(\"window\").height;\nvar CardSection = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n//Diemension\\uC4F0\\uAE30\\uC704\\uD574 \\uC778\\uB77C\\uC778 style \\uC801\\uC6A9\\n\"])));\nvar Card = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n    margin:30px;\\n    /* border: 1px solid black; */\\n    border-radius: 15px;\\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.4);\\n\"])));\nvar CardImgShell = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    flex: 3;\\n    align-items: center;\\n    width: 70%;\\n\"])));\nvar CardImg = styled.Image(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    width: 100%;\\n\"])));\nvar CardContents = styled.Pressable(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n\"])));\nvar CardName = styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n    flex:1;\\n    align-items: center;\\n\"])));\nvar CardNameText = styled.Text(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n    font-size: 65px;\\n    font-weight: 900;\\n    color: \", \";\\n\"])), colors.REALDARKGRAY);\nexport var WordCard1LV = function WordCard1LV() {\n  return _jsx(FlatList, {\n    horizontal: true,\n    pagingEnabled: true,\n    data: wordCard,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _jsx(CardSection, {\n        style: {\n          width: SCREEN_WIDTH\n        },\n        children: _jsxs(Card, {\n          style: {\n            backgroundColor: item.bgColor\n          },\n          children: [_jsx(CardImgShell, {\n            children: _jsx(CardImg, {\n              source: item.image,\n              resizeMode: \"contain\"\n            })\n          }), _jsx(CardContents, {\n            onPress: function onPress() {\n              return console.log(item.name);\n            },\n            children: _jsx(CardName, {\n              children: _jsx(CardNameText, {\n                children: item.name\n              })\n            })\n          })]\n        })\n      });\n    }\n  });\n};\nvar Record = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n    height: 30px;\\n    flex-direction: row;\\n\"])));\nvar CheckRecord = styled.View(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n    flex:1;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nvar CheckRecordImage = styled.ImageBackground(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n    width: 24px;\\n    height: 24px;\\n    width: 40px;\\n    \"])));\nvar CheckRecordText = styled.Text(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n    color: green;\\n    font-size: 17px;\\n    bottom: 1px;\\n\"])));\nexport var WordCard2LV = function WordCard2LV() {\n  return _jsxs(View, {\n    children: [_jsx(Record, {\n      children: _jsxs(CheckRecord, {\n        children: [_jsx(CheckRecordImage, {\n          source: require(\"../asset/images/Check.png\"),\n          resizeMode: \"contain\"\n        }), _jsx(CheckRecordText, {\n          children: \"2\\uB808\\uBCA8\"\n        })]\n      })\n    }), _jsx(FlatList, {\n      horizontal: true,\n      pagingEnabled: true,\n      data: wordCard,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(CardSection, {\n          style: {\n            width: SCREEN_WIDTH\n          },\n          children: _jsxs(Card, {\n            children: [_jsx(CardImgShell, {\n              children: _jsx(CardImg, {\n                source: item.image,\n                resizeMode: \"contain\"\n              })\n            }), _jsx(CardContents, {\n              onPress: function onPress() {\n                return console.log(item.name);\n              },\n              children: _jsx(CardName, {\n                children: _jsx(CardNameText, {\n                  children: item.name\n                })\n              })\n            })]\n          })\n        });\n      }\n    })]\n  });\n};\nvar Container = styled.View(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n    flex: 1;\\n    justify-content: center;\\n    align-items: center;    \\n\"])));\nvar ExamCard = styled(Animated.createAnimatedComponent(View))(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n    background-color: beige;\\n    width: 300px;\\n    height: 300px;\\n    justify-content: center;\\n    align-items: center;\\n    border-radius: 15px;\\n    box-shadow: 1px 1px 5px rgba(0,0,0,0.3);\\n    position: absolute;\\n\"])));\nvar BtnContainer = styled.View(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n    flex-direction: row;\\n    flex: 1;\\n\"])));\nvar Btn = styled.TouchableOpacity(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n    margin: 0px 10px;\\n\"])));\nvar CardContainer = styled.View(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n    flex: 3;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\nexport var WordCard3LV = function WordCard3LV() {\n  var scale = useRef(new Animated.Value(1)).current;\n  var position = useRef(new Animated.Value(0)).current;\n  var rotation = position.interpolate({\n    inputRange: [-250, 250],\n    outputRange: [\"-15deg\", \"15deg\"],\n    extrapolate: \"clamp\"\n  });\n  var secondScale = position.interpolate({\n    inputRange: [-200, 0, 200],\n    outputRange: [1, 0.7, 1],\n    extrapolate: \"clamp\"\n  });\n  var onPressIn = Animated.spring(scale, {\n    toValue: 1.05,\n    useNativeDriver: true\n  });\n  var onPressOut = Animated.spring(scale, {\n    toValue: 1,\n    useNativeDriver: true\n  });\n  var goCenter = Animated.spring(position, {\n    toValue: 0,\n    tension: 100,\n    friction: 5,\n    useNativeDriver: true\n  });\n  var goLeft = Animated.spring(position, {\n    toValue: -SCREEN_WIDTH,\n    tension: 5,\n    useNativeDriver: true\n  });\n  var goRight = Animated.spring(position, {\n    toValue: 400,\n    tension: 5,\n    useNativeDriver: true\n  });\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(_, _ref3) {\n      var dx = _ref3.dx;\n      position.setValue(dx);\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      return onPressIn.start();\n    },\n    onPanResponderRelease: function onPanResponderRelease(_, _ref4) {\n      var dx = _ref4.dx;\n\n      if (dx < -200) {\n        goLeft.start(onDismiss);\n      } else if (dx > 200) {\n        goRight.start(onDismiss);\n      } else Animated.parallel([onPressOut, goCenter]).start();\n    }\n  })).current;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var onDismiss = function onDismiss() {\n    scale.setValue(1);\n    position.setValue(0);\n    setIndex(function (prev) {\n      return prev + 1;\n    });\n  };\n\n  var checkPress = function checkPress() {\n    goLeft.start(onDismiss);\n  };\n\n  var closePress = function closePress() {\n    goRight.start(onDismiss);\n  };\n\n  console.log(wordCard.length);\n  console.log(index);\n  return _jsxs(Container, {\n    children: [_jsxs(CardContainer, {\n      children: [_jsx(ExamCard, {\n        style: {\n          transform: [{\n            scale: secondScale\n          }]\n        },\n        children: _jsx(CardImg, {\n          source: wordCard[index + 1].image,\n          resizeMode: \"contain\"\n        })\n      }), _jsx(ExamCard, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n        style: {\n          transform: [{\n            scale: scale\n          }, {\n            translateX: position\n          }, {\n            rotateZ: rotation\n          }]\n        },\n        children: _jsx(CardImg, {\n          source: wordCard[index].image,\n          resizeMode: \"contain\"\n        })\n      }))]\n    }), _jsxs(BtnContainer, {\n      children: [_jsx(Btn, {\n        onPress: checkPress,\n        children: _jsx(Ionicons, {\n          name: \"checkmark-circle\",\n          color: \"black\",\n          size: 42\n        })\n      }), _jsx(Btn, {\n        onPress: closePress,\n        children: _jsx(Ionicons, {\n          name: \"close-circle\",\n          color: \"black\",\n          size: 42\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"sources":["/Users/coqoa/Downloads/RN-APP/taptapcard/app/component/CardDefault.js"],"names":["React","useState","useEffect","useRef","Easing","styled","wordCard","colors","Ionicons","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","CardSection","View","Card","CardImgShell","CardImg","Image","CardContents","Pressable","CardName","CardNameText","Text","REALDARKGRAY","WordCard1LV","item","backgroundColor","bgColor","image","console","log","name","Record","CheckRecord","CheckRecordImage","ImageBackground","CheckRecordText","WordCard2LV","require","Container","ExamCard","Animated","createAnimatedComponent","BtnContainer","Btn","TouchableOpacity","CardContainer","WordCard3LV","scale","Value","current","position","rotation","interpolate","inputRange","outputRange","extrapolate","secondScale","onPressIn","spring","toValue","useNativeDriver","onPressOut","goCenter","tension","friction","goLeft","goRight","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","_","dx","setValue","onPanResponderGrant","start","onPanResponderRelease","onDismiss","parallel","index","setIndex","prev","checkPress","closePress","length","transform","panHandlers","translateX","rotateZ"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;;;;;AAEA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;AACA,IAAMC,aAAa,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA/C;AAEA,IAAMC,WAAW,GAAGV,MAAM,CAACW,IAAV,wJAAjB;AAGA,IAAMC,IAAI,GAAGZ,MAAM,CAACW,IAAV,mRAAV;AASA,IAAME,YAAY,GAAGb,MAAM,CAACW,IAAV,uIAAlB;AAKA,IAAMG,OAAO,GAAGd,MAAM,CAACe,KAAV,8GAAb;AAIA,IAAMC,YAAY,GAAGhB,MAAM,CAACiB,SAAV,4FAAlB;AAGA,IAAMC,QAAQ,GAAGlB,MAAM,CAACW,IAAV,qHAAd;AAIA,IAAMQ,YAAY,GAAGnB,MAAM,CAACoB,IAAV,8IAGLlB,MAAM,CAACmB,YAHF,CAAlB;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAE7B,SACA,KAAC,QAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,aAAa,MAFjB;AAGI,IAAA,IAAI,EAAErB,QAHV;AAII,IAAA,UAAU,EAAI;AAAA,UAAEsB,IAAF,QAAEA,IAAF;AAAA,aACV,KAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAChB,UAAAA,KAAK,EAACH;AAAP,SAApB;AAAA,kBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACoB,YAAAA,eAAe,EAAGD,IAAI,CAACE;AAAxB,WAAb;AAAA,qBAII,KAAC,YAAD;AAAA,sBACI,KAAC,OAAD;AAAS,cAAA,MAAM,EAAEF,IAAI,CAACG,KAAtB;AAA6B,cAAA,UAAU,EAAC;AAAxC;AADJ,YAJJ,EAOI,KAAC,YAAD;AAAc,YAAA,OAAO,EAAE;AAAA,qBAAMC,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,IAAjB,CAAN;AAAA,aAAvB;AAAA,sBACI,KAAC,QAAD;AAAA,wBACI,KAAC,YAAD;AAAA,0BAAeN,IAAI,CAACM;AAApB;AADJ;AADJ,YAPJ;AAAA;AADJ,QADU;AAAA;AAJlB,IADA;AAwBH,CA1BM;AA4BP,IAAMC,MAAM,GAAG9B,MAAM,CAACW,IAAV,2HAAZ;AAIA,IAAMoB,WAAW,GAAG/B,MAAM,CAACW,IAAV,6KAAjB;AAMA,IAAMqB,gBAAgB,GAAGhC,MAAM,CAACiC,eAAV,2IAAtB;AAKA,IAAMC,eAAe,GAAGlC,MAAM,CAACoB,IAAV,2IAArB;AAOA,OAAO,IAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AAE7B,SACA,MAAC,IAAD;AAAA,eACI,KAAC,MAAD;AAAA,gBACI,MAAC,WAAD;AAAA,mBACI,KAAC,gBAAD;AAAkB,UAAA,MAAM,EAAEC,OAAO,6BAAjC;AAAgE,UAAA,UAAU,EAAC;AAA3E,UADJ,EAEI,KAAC,eAAD;AAAA;AAAA,UAFJ;AAAA;AADJ,MADJ,EAQI,KAAC,QAAD;AACI,MAAA,UAAU,MADd;AAEI,MAAA,aAAa,MAFjB;AAGI,MAAA,IAAI,EAAEnC,QAHV;AAII,MAAA,UAAU,EAAI;AAAA,YAAEsB,IAAF,SAAEA,IAAF;AAAA,eACV,KAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAAChB,YAAAA,KAAK,EAACH;AAAP,WAApB;AAAA,oBACI,MAAC,IAAD;AAAA,uBAII,KAAC,YAAD;AAAA,wBACI,KAAC,OAAD;AAAS,gBAAA,MAAM,EAAEmB,IAAI,CAACG,KAAtB;AAA6B,gBAAA,UAAU,EAAC;AAAxC;AADJ,cAJJ,EAOI,KAAC,YAAD;AAAc,cAAA,OAAO,EAAE;AAAA,uBAAMC,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,IAAjB,CAAN;AAAA,eAAvB;AAAA,wBACI,KAAC,QAAD;AAAA,0BACI,KAAC,YAAD;AAAA,4BAAeN,IAAI,CAACM;AAApB;AADJ;AADJ,cAPJ;AAAA;AADJ,UADU;AAAA;AAJlB,MARJ;AAAA,IADA;AAiCH,CAnCM;AAqCP,IAAMQ,SAAS,GAAGrC,MAAM,CAACW,IAAV,0JAAf;AAKA,IAAM2B,QAAQ,GAAGtC,MAAM,CAACuC,QAAQ,CAACC,uBAAT,CAAiC7B,IAAjC,CAAD,CAAT,8SAAd;AAUA,IAAM8B,YAAY,GAAGzC,MAAM,CAACW,IAAV,wHAAlB;AAKA,IAAM+B,GAAG,GAAG1C,MAAM,CAAC2C,gBAAV,uGAAT;AAGA,IAAMC,aAAa,GAAG5C,MAAM,CAACW,IAAV,sJAAnB;AAOA,OAAO,IAAMkC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAE7B,MAAMC,KAAK,GAAGhD,MAAM,CAAC,IAAIyC,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA5C;AACA,MAAMC,QAAQ,GAAGnD,MAAM,CAAC,IAAIyC,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;AACA,MAAME,QAAQ,GAAGD,QAAQ,CAACE,WAAT,CAAqB;AAClCC,IAAAA,UAAU,EAAC,CAAC,CAAC,GAAF,EAAO,GAAP,CADuB;AAElCC,IAAAA,WAAW,EAAC,CAAC,QAAD,EAAW,OAAX,CAFsB;AAGlCC,IAAAA,WAAW,EAAE;AAHqB,GAArB,CAAjB;AAKA,MAAMC,WAAW,GAAGN,QAAQ,CAACE,WAAT,CAAqB;AACrCC,IAAAA,UAAU,EAAC,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,GAAV,CAD0B;AAErCC,IAAAA,WAAW,EAAC,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAFyB;AAGrCC,IAAAA,WAAW,EAAC;AAHyB,GAArB,CAApB;AAMA,MAAME,SAAS,GAAGjB,QAAQ,CAACkB,MAAT,CAAgBX,KAAhB,EAAuB;AACrCY,IAAAA,OAAO,EAAC,IAD6B;AAErCC,IAAAA,eAAe,EAAC;AAFqB,GAAvB,CAAlB;AAIA,MAAMC,UAAU,GAAGrB,QAAQ,CAACkB,MAAT,CAAgBX,KAAhB,EAAuB;AACtCY,IAAAA,OAAO,EAAC,CAD8B;AAEtCC,IAAAA,eAAe,EAAC;AAFsB,GAAvB,CAAnB;AAIA,MAAME,QAAQ,GAAGtB,QAAQ,CAACkB,MAAT,CAAgBR,QAAhB,EAA0B;AACvCS,IAAAA,OAAO,EAAC,CAD+B;AAEvCI,IAAAA,OAAO,EAAC,GAF+B;AAGvCC,IAAAA,QAAQ,EAAC,CAH8B;AAIvCJ,IAAAA,eAAe,EAAC;AAJuB,GAA1B,CAAjB;AAMA,MAAMK,MAAM,GAAGzB,QAAQ,CAACkB,MAAT,CAAgBR,QAAhB,EAA0B;AACrCS,IAAAA,OAAO,EAAC,CAACtD,YAD4B;AAErC0D,IAAAA,OAAO,EAAE,CAF4B;AAGrCH,IAAAA,eAAe,EAAC;AAHqB,GAA1B,CAAf;AAKA,MAAMM,OAAO,GAAG1B,QAAQ,CAACkB,MAAT,CAAgBR,QAAhB,EAA0B;AACtCS,IAAAA,OAAO,EAAC,GAD8B;AAEtCI,IAAAA,OAAO,EAAE,CAF6B;AAGtCH,IAAAA,eAAe,EAAC;AAHsB,GAA1B,CAAhB;AAMA,MAAMO,YAAY,GAAGpE,MAAM,CACvBqE,YAAY,CAACC,MAAb,CAAoB;AAChBC,IAAAA,4BAA4B,EAAE;AAAA,aAAM,IAAN;AAAA,KADd;AAEhBC,IAAAA,kBAAkB,EAAC,4BAACC,CAAD,SAAY;AAAA,UAARC,EAAQ,SAARA,EAAQ;AAC3BvB,MAAAA,QAAQ,CAACwB,QAAT,CAAkBD,EAAlB;AAEH,KALe;AAMhBE,IAAAA,mBAAmB,EAAE;AAAA,aAAMlB,SAAS,CAACmB,KAAV,EAAN;AAAA,KANL;AAOhBC,IAAAA,qBAAqB,EAAE,+BAACL,CAAD,SAAa;AAAA,UAARC,EAAQ,SAARA,EAAQ;;AAChC,UAAGA,EAAE,GAAG,CAAC,GAAT,EAAa;AAETR,QAAAA,MAAM,CAACW,KAAP,CAAaE,SAAb;AACH,OAHD,MAGM,IAAGL,EAAE,GAAC,GAAN,EAAU;AAEZP,QAAAA,OAAO,CAACU,KAAR,CAAcE,SAAd;AAEH,OAJK,MAKNtC,QAAQ,CAACuC,QAAT,CAAkB,CAAClB,UAAD,EAAaC,QAAb,CAAlB,EAA0Cc,KAA1C;AAEH;AAlBe,GAApB,CADuB,CAAN,CAsBnB3B,OAtBF;;AAwBA,kBAA0BpD,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOmF,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMH,SAAS,GAAG,SAAZA,SAAY,GAAM;AAIhB/B,IAAAA,KAAK,CAAC2B,QAAN,CAAe,CAAf;AACAxB,IAAAA,QAAQ,CAACwB,QAAT,CAAkB,CAAlB;AACAO,IAAAA,QAAQ,CAAC,UAACC,IAAD;AAAA,aAAUA,IAAI,GAAE,CAAhB;AAAA,KAAD,CAAR;AAEP,GARD;;AASA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBlB,IAAAA,MAAM,CAACW,KAAP,CAAaE,SAAb;AACH,GAFD;;AAGA,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAK;AACpBlB,IAAAA,OAAO,CAACU,KAAR,CAAcE,SAAd;AACH,GAFD;;AAIAlD,EAAAA,OAAO,CAACC,GAAR,CAAY3B,QAAQ,CAACmF,MAArB;AACAzD,EAAAA,OAAO,CAACC,GAAR,CAAYmD,KAAZ;AAGA,SACI,MAAC,SAAD;AAAA,eACI,MAAC,aAAD;AAAA,iBACI,KAAC,QAAD;AAEA,QAAA,KAAK,EAAE;AACHM,UAAAA,SAAS,EAAC,CAAC;AAACvC,YAAAA,KAAK,EAACS;AAAP,WAAD;AADP,SAFP;AAAA,kBAMI,KAAC,OAAD;AAAS,UAAA,MAAM,EAAEtD,QAAQ,CAAC8E,KAAK,GAAC,CAAP,CAAR,CAAkBrD,KAAnC;AAA0C,UAAA,UAAU,EAAC;AAArD;AANJ,QADJ,EASI,KAAC,QAAD,kCACIwC,YAAY,CAACoB,WADjB;AAEA,QAAA,KAAK,EAAE;AACHD,UAAAA,SAAS,EAAC,CAAC;AAACvC,YAAAA,KAAK,EAALA;AAAD,WAAD,EAAS;AAACyC,YAAAA,UAAU,EAACtC;AAAZ,WAAT,EAAgC;AAACuC,YAAAA,OAAO,EAACtC;AAAT,WAAhC;AADP,SAFP;AAAA,kBAMI,KAAC,OAAD;AAAS,UAAA,MAAM,EAAEjD,QAAQ,CAAC8E,KAAD,CAAR,CAAgBrD,KAAjC;AAAwC,UAAA,UAAU,EAAC;AAAnD;AANJ,SATJ;AAAA,MADJ,EAmBI,MAAC,YAAD;AAAA,iBACI,KAAC,GAAD;AAAK,QAAA,OAAO,EAAEwD,UAAd;AAAA,kBACI,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,kBAAf;AAAkC,UAAA,KAAK,EAAC,OAAxC;AAAgD,UAAA,IAAI,EAAE;AAAtD;AADJ,QADJ,EAII,KAAC,GAAD;AAAK,QAAA,OAAO,EAAEC,UAAd;AAAA,kBACI,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,cAAf;AAA8B,UAAA,KAAK,EAAC,OAApC;AAA4C,UAAA,IAAI,EAAE;AAAlD;AADJ,QAJJ;AAAA,MAnBJ;AAAA,IADJ;AA8BH,CAnHM","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\nimport {View, Dimensions, FlatList, Animated, TouchableOpacity, Pressable, PanResponder } from \"react-native\";\nimport Easing from \"react-native/Libraries/Animated/Easing\";\nimport styled from \"styled-components\"\nimport { wordCard } from \"../asset/data/wordCard\";\nimport { colors } from \"./color\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\n\nconst CardSection = styled.View`\n//Diemension쓰기위해 인라인 style 적용\n`\nconst Card = styled.View`\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n    margin:30px;\n    /* border: 1px solid black; */\n    border-radius: 15px;\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.4);\n`\nconst CardImgShell = styled.View`\n    flex: 3;\n    align-items: center;\n    width: 70%;\n`\nconst CardImg = styled.Image`\n    flex: 1;\n    width: 100%;\n`\nconst CardContents = styled.Pressable`\n    flex: 1;\n`\nconst CardName = styled.View`\n    flex:1;\n    align-items: center;\n`\nconst CardNameText = styled.Text`\n    font-size: 65px;\n    font-weight: 900;\n    color: ${colors.REALDARKGRAY};\n`\n\nexport const WordCard1LV = () => {\n\n    return(\n    <FlatList\n        horizontal\n        pagingEnabled\n        data={wordCard}\n        renderItem = {({item})=>(\n            <CardSection style={{width:SCREEN_WIDTH}}> \n                <Card style={{backgroundColor : item.bgColor}}>\n                    {/* <CheckBtn onPress={() => console.log(item.id)}>\n                        <CheckBtnImage source={require(\"../asset/images/EmptyCheck.png\")}></CheckBtnImage>\n                    </CheckBtn> */}\n                    <CardImgShell>\n                        <CardImg source={item.image} resizeMode=\"contain\"></CardImg>\n                    </CardImgShell>\n                    <CardContents onPress={() => console.log(item.name)}>\n                        <CardName>\n                            <CardNameText>{item.name}</CardNameText>\n                        </CardName>\n                    </CardContents>\n                </Card>\n            </CardSection>\n        )}\n    />\n    )\n}\n\nconst Record = styled.View`\n    height: 30px;\n    flex-direction: row;\n`\nconst CheckRecord = styled.View`\n    flex:1;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\nconst CheckRecordImage = styled.ImageBackground`\n    width: 24px;\n    height: 24px;\n    width: 40px;\n    `\nconst CheckRecordText = styled.Text`\n    color: green;\n    font-size: 17px;\n    bottom: 1px;\n`\n\n//레벨2 레벨3은 이런식으로 작성하면 될것같음\nexport const WordCard2LV = () => {\n\n    return(\n    <View>\n        <Record>\n            <CheckRecord>\n                <CheckRecordImage source={require(\"../asset/images/Check.png\")} resizeMode=\"contain\"></CheckRecordImage>\n                <CheckRecordText>2레벨</CheckRecordText>\n            </CheckRecord>\n        </Record>\n\n        <FlatList\n            horizontal\n            pagingEnabled\n            data={wordCard}\n            renderItem = {({item})=>(\n                <CardSection style={{width:SCREEN_WIDTH}}> \n                    <Card>\n                        {/* <CheckBtn onPress={() => console.log(item.id)}>\n                            <CheckBtnImage source={require(\"../asset/images/EmptyCheck.png\")}></CheckBtnImage>\n                        </CheckBtn> */}\n                        <CardImgShell>\n                            <CardImg source={item.image} resizeMode=\"contain\"></CardImg>\n                        </CardImgShell>\n                        <CardContents onPress={() => console.log(item.name)}>\n                            <CardName>\n                                <CardNameText>{item.name}</CardNameText>\n                            </CardName>\n                        </CardContents>\n                    </Card>\n                </CardSection>\n            )}\n        />\n    </View>\n    )\n}\n\nconst Container = styled.View`\n    flex: 1;\n    justify-content: center;\n    align-items: center;    \n`\nconst ExamCard = styled(Animated.createAnimatedComponent(View))`\n    background-color: beige;\n    width: 300px;\n    height: 300px;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    box-shadow: 1px 1px 5px rgba(0,0,0,0.3);\n    position: absolute;\n`\nconst BtnContainer = styled.View`\n    flex-direction: row;\n    flex: 1;\n`\n\nconst Btn = styled.TouchableOpacity`\n    margin: 0px 10px;\n`\nconst CardContainer = styled.View`\n    flex: 3;\n    justify-content: center;\n    align-items: center;\n`\n// const AnimatedCard = Animated.createAnimatedComponent(ExamCard);\n\nexport const WordCard3LV = () => {\n    //Values\n    const scale = useRef(new Animated.Value(1)).current;\n    const position = useRef(new Animated.Value(0)).current;\n    const rotation = position.interpolate({\n        inputRange:[-250, 250],\n        outputRange:[\"-15deg\", \"15deg\"],\n        extrapolate: \"clamp\" // 범위에서 넘어가면 interpolate를 어떻게 처리할지 ?\n    });\n    const secondScale = position.interpolate({\n        inputRange:[-200, 0, 200],\n        outputRange:[1, 0.7, 1],\n        extrapolate:\"clamp\"\n    }) ;\n    //Animations\n    const onPressIn = Animated.spring(scale, {\n        toValue:1.05, \n        useNativeDriver:true\n    });\n    const onPressOut = Animated.spring(scale, {\n        toValue:1, \n        useNativeDriver:true\n    });\n    const goCenter = Animated.spring(position, {\n        toValue:0,\n        tension:100,\n        friction:5,\n        useNativeDriver:true,\n    });\n    const goLeft = Animated.spring(position, {\n        toValue:-SCREEN_WIDTH, \n        tension: 5,\n        useNativeDriver:true\n    });\n    const goRight = Animated.spring(position, {\n        toValue:400, \n        tension: 5,\n        useNativeDriver:true\n    });\n    //panResponder\n    const panResponder = useRef(\n        PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderMove:(_,{dx}) => {\n                position.setValue(dx)\n\n            }, \n            onPanResponderGrant: () => onPressIn.start(),\n            onPanResponderRelease: (_, {dx}) => {\n                if(dx < -200){\n                    // console.log(\"dismiss to the left\")\n                    goLeft.start(onDismiss);\n                }else if(dx>200){\n                    // console.log(\"dismiss to the right\")\n                    goRight.start(onDismiss);\n\n                }else \n                Animated.parallel([onPressOut, goCenter]).start();\n                \n            },\n\n        })\n    ).current\n    // State\n    const [index, setIndex] = useState(0);\n    const onDismiss = () => {\n        // if (index+4 == wordCard.length){\n        //     null\n        // }else{\n            scale.setValue(1);\n            position.setValue(0);\n            setIndex((prev) => prev +1)\n        // }\n    }\n    const checkPress = () => {\n        goLeft.start(onDismiss);\n    }\n    const closePress = () =>{\n        goRight.start(onDismiss);\n    }\n    \n    console.log(wordCard.length);\n    console.log(index)\n\n    \n    return(\n        <Container>\n            <CardContainer>\n                <ExamCard \n                // {...panResponder.panHandlers}\n                style={{\n                    transform:[{scale:secondScale}]\n                }}>\n                    {/* <Ionicons name=\"beer\" color=\"#192a56\" size={98}/> */}\n                    <CardImg source={wordCard[index+1].image} resizeMode=\"contain\"></CardImg>\n                </ExamCard>\n                <ExamCard \n                {...panResponder.panHandlers}\n                style={{\n                    transform:[{scale},{translateX:position}, {rotateZ:rotation}]\n                }}>\n                    {/* <Ionicons name=\"pizza\" color=\"#192a56\" size={98}/> */}\n                    <CardImg source={wordCard[index].image} resizeMode=\"contain\"></CardImg>\n                </ExamCard>\n            </CardContainer>\n            <BtnContainer>\n                <Btn onPress={checkPress}>\n                    <Ionicons name=\"checkmark-circle\" color=\"black\" size={42} />\n                </Btn>\n                <Btn onPress={closePress}>\n                    <Ionicons name=\"close-circle\" color=\"black\" size={42} />\n                </Btn>\n            </BtnContainer>\n        </Container>\n    )\n}\n    // <View>\n    //     <Record>\n    //         <CheckRecord>\n    //             <CheckRecordImage source={require(\"../asset/images/Check.png\")} resizeMode=\"contain\"></CheckRecordImage>\n    //             <CheckRecordText>3레벨</CheckRecordText>\n    //         </CheckRecord>\n    //     </Record>\n\n    //     <FlatList\n    //         horizontal\n    //         pagingEnabled\n    //         data={wordCard}\n    //         renderItem = {({item})=>(\n    //             <CardSection style={{width:SCREEN_WIDTH}}> \n    //                 <Card>\n    //                     {/* <CheckBtn onPress={() => console.log(item.id)}>\n    //                         <CheckBtnImage source={require(\"../asset/images/EmptyCheck.png\")}></CheckBtnImage>\n    //                     </CheckBtn> */}\n    //                     <CardImgShell>\n    //                         <CardImg source={item.image} resizeMode=\"contain\"></CardImg>\n    //                     </CardImgShell>\n    //                     <CardContents onPress={() => console.log(item.name)}>\n    //                         <CardName>\n    //                             <CardNameText>{item.name}</CardNameText>\n    //                         </CardName>\n    //                     </CardContents>\n    //                 </Card>\n    //             </CardSection>\n    //         )}\n    //     />\n    // </View>\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}